#! /usr/bin/bash
shopt -s extglob
source ./globFuncs
insertIntoFunc () {
    echo $# #debug
    funcValidationMI 2 $@ 
    if [ $? -eq 1 ]; then
        echo Critical error in function! Aborting...
    else
        echo function reached!!! #debug

        #TODO Need to add a auto increment for PK
        while IFS= read -r line; do
            flag=0
            declare out
            existingField=$(echo "$line" | cut -d: -f1) 
            # echo "Existing Field: $existingField" #debug
            for inputField in ${@:2}
            do
                # echo Input field: $inputField #debug
                inputFieldName=`cut -d: -f1 <<< $inputField`
                    if [ $existingField == $inputFieldName ]; then
                        # echo Check #debug
                        inputFieldData=`cut -d: -f2 <<< $inputField`
                        flag=1
                        out+=$inputFieldData":"
                        break
                    fi
            done
            if [ $flag -eq 0 ]; then
                out+=:
            fi
        done < "$1"_metadata
        out=${out::-1}
        echo $out >> $1
        echo Record $out has been inserted into the table # debug

    fi



    #         # prepare validation variables
    #         colonNum=`grep -o ":" <<< $field | wc -l`

    #         # validate that each fields specifies a datatype
    #         if [ $colonNum -ne 1 ]; then
    #             echo 'Follow this example: [field name]:[data]'
    #             break
    #         else
    #             # prepare input validation variables
    #             inputFieldName=`cut -d: -f1 <<< $field`
    #             recordedDatatype=`sed -n "/${inputFieldName}/p" "$1"_metadata | cut -d: -f2`
                
    #             # prepare data
    #             data=`cut -d: -f2 <<< $field`

    #             # validate
    #             if [ -z $recordedDatatype ]; then
    #                 echo "The provided field name doesn't exist. Please try again."
    #             elif [ $recordedDatatype = "int" ]; then
    #                 if [[ $data =~ ^\s*-?[0-9]{1,}\s*$ ]]; then
    #                     echo $field >> $1
    #                 else
    #                     echo The field you are trying to insert into requires an integer
    #                 fi
    #             fi
    #         fi
    #     done
    # fi
}